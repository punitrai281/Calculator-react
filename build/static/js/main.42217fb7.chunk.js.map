{"version":3,"sources":["components/Calculator.jsx","components/App.jsx","index.js"],"names":["Calculator","operations","firstNum","secNum","op","result","useState","firstInput","secondInput","input","setInput","isOperator","setIsOperator","operator","setOperator","emoji","setEoji","handleOperatorClick","prop","target","value","prevValue","parseFloat","toString","handleNumClick","num","handleC","id","src","alt","className","disabled","readOnly","onClick","substring","length","Math","abs","includes","setTimeout","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42217fb7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nfunction Calculator() {\r\n  function operations(firstNum, secNum, op) {\r\n    let result;\r\n    switch (op) {\r\n      case \"+\":\r\n        result = firstNum + secNum;\r\n        break;\r\n      case \"-\":\r\n        result = firstNum - secNum;\r\n        break;\r\n      case \"*\":\r\n        result = firstNum * secNum;\r\n        break;\r\n      case \"/\":\r\n        result = firstNum / secNum;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return result;\r\n  }\r\n  const [input, setInput] = useState({\r\n    firstInput: \"\",\r\n    secondInput: \"\",\r\n  });\r\n  const [isOperator, setIsOperator] = useState(false);\r\n  const [operator, setOperator] = useState(\"\");\r\n  const [emoji, setEoji] = useState(false);\r\n  function handleOperatorClick(prop) {\r\n    const op = prop.target.value;\r\n    if (input.firstInput !== \"\" && input.secondInput === \"\") {\r\n      setIsOperator(true);\r\n      setOperator(op);\r\n    }\r\n    if (input.firstInput !== \"\" && input.secondInput !== \"\") {\r\n      setOperator(op);\r\n\r\n      setInput((prevValue) => {\r\n        let res = operations(\r\n          parseFloat(prevValue.firstInput),\r\n          parseFloat(prevValue.secondInput),\r\n          operator\r\n        );\r\n        return {\r\n          firstInput: res.toString(),\r\n          secondInput: \"\",\r\n        };\r\n      });\r\n    }\r\n  }\r\n  function handleNumClick(prop) {\r\n    const num = prop.target.value;\r\n    if (!isOperator) {\r\n      setInput((prevValue) => {\r\n        return {\r\n          ...prevValue,\r\n          firstInput: prevValue.firstInput + num,\r\n        };\r\n      });\r\n    } else {\r\n      setInput((prevValue) => {\r\n        return {\r\n          ...prevValue,\r\n          secondInput: prevValue.secondInput + num,\r\n        };\r\n      });\r\n    }\r\n  }\r\n  function handleEquals() {\r\n    if (input.firstInput !== \"\" && input.secondInput !== \"\") {\r\n      setInput((prevValue) => {\r\n        let res = operations(\r\n          parseFloat(prevValue.firstInput),\r\n          parseFloat(prevValue.secondInput),\r\n          operator\r\n        );\r\n        return {\r\n          firstInput: res.toString(),\r\n          secondInput: \"\",\r\n        };\r\n      });\r\n      setIsOperator(false);\r\n      setOperator(\"\");\r\n    }\r\n  }\r\n  function handleC() {\r\n    setInput({\r\n      firstInput: \"\",\r\n      secondInput: \"\",\r\n    });\r\n    setIsOperator(false);\r\n    setOperator(\"\");\r\n  }\r\n  function handleCE() {\r\n    if (input.firstInput === \"Infinity\") {\r\n      handleC();\r\n    }\r\n    if (isOperator) {\r\n      setInput((prevValue) => {\r\n        if (prevValue.secondInput === \"\") {\r\n          setIsOperator(false);\r\n        }\r\n        return {\r\n          ...prevValue,\r\n          secondInput: prevValue.secondInput.substring(\r\n            0,\r\n            prevValue.secondInput.length - 1\r\n          ),\r\n        };\r\n      });\r\n    } else {\r\n      setInput((prevValue) => {\r\n        return {\r\n          ...prevValue,\r\n          firstInput: prevValue.firstInput.substring(\r\n            0,\r\n            prevValue.firstInput.length - 1\r\n          ),\r\n        };\r\n      });\r\n    }\r\n  }\r\n  function handleNegation() {\r\n    if (input.firstInput !== \"Infinity\") {\r\n      if (isOperator && input.secondInput !== \"\") {\r\n        if (parseFloat(input.secondInput) > 0) {\r\n          setInput((prevValue) => {\r\n            return {\r\n              ...prevValue,\r\n              secondInput: -Math.abs(parseFloat(prevValue.secondInput)),\r\n            };\r\n          });\r\n        }\r\n        if (parseFloat(input.secondInput) < 0) {\r\n          setInput((prevValue) => {\r\n            return {\r\n              ...prevValue,\r\n              secondInput: Math.abs(parseFloat(prevValue.secondInput)),\r\n            };\r\n          });\r\n        }\r\n      }\r\n      if (!isOperator) {\r\n        if (parseFloat(input.firstInput) > 0) {\r\n          setInput((prevValue) => {\r\n            return {\r\n              ...prevValue,\r\n              firstInput: -Math.abs(parseFloat(prevValue.firstInput)),\r\n            };\r\n          });\r\n        }\r\n        if (parseFloat(input.firstInput) < 0) {\r\n          setInput((prevValue) => {\r\n            return {\r\n              ...prevValue,\r\n              firstInput: Math.abs(parseFloat(prevValue.firstInput)),\r\n            };\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n  function handleDec() {\r\n    if (isOperator) {\r\n      if (!input.secondInput.includes(\".\")) {\r\n        setInput((prevValue) => {\r\n          return { ...prevValue, secondInput: prevValue.secondInput + \".\" };\r\n        });\r\n      }\r\n    } else {\r\n      if (!input.firstInput.includes(\".\")) {\r\n        setInput((prevValue) => {\r\n          return {\r\n            ...prevValue,\r\n            firstInput: prevValue.firstInput + \".\",\r\n          };\r\n        });\r\n      }\r\n    }\r\n  }\r\n  function handleEmoji() {\r\n    setEoji(true);\r\n\r\n    setTimeout(() => {\r\n      setEoji(false);\r\n    }, 1500);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {emoji ? <img id=\"emoji\" src=\"giphyEmoji.gif\" alt=\"emoji\"></img> : null}\r\n\r\n      <div className={emoji ? \"blur\" : \"\"} id=\"container\">\r\n        <div className=\"input-box\">\r\n          <input\r\n            className=\"input-history\"\r\n            disabled\r\n            value={isOperator ? input.firstInput + operator : \"\"}\r\n            readOnly\r\n          ></input>\r\n          <input\r\n            className=\"input-result\"\r\n            value={isOperator ? input.secondInput : input.firstInput}\r\n            readOnly\r\n          ></input>\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button className=\"functions\" onClick={handleC}>\r\n            C\r\n          </button>\r\n          <button className=\"functions\" onClick={handleCE}>\r\n            CE\r\n          </button>\r\n          <button className=\"functions\" onClick={handleNegation}>\r\n            -/+\r\n          </button>\r\n          <button className=\"operators\" value=\"+\" onClick={handleOperatorClick}>\r\n            +\r\n          </button>\r\n          <button className=\"number\" value=\"1\" onClick={handleNumClick}>\r\n            1\r\n          </button>\r\n          <button className=\"number\" value=\"2\" onClick={handleNumClick}>\r\n            2\r\n          </button>\r\n          <button className=\"number\" value=\"3\" onClick={handleNumClick}>\r\n            3\r\n          </button>\r\n          <button className=\"operators\" value=\"-\" onClick={handleOperatorClick}>\r\n            -\r\n          </button>\r\n          <button className=\"number\" value=\"4\" onClick={handleNumClick}>\r\n            4\r\n          </button>\r\n          <button className=\"number\" value=\"5\" onClick={handleNumClick}>\r\n            5\r\n          </button>\r\n          <button className=\"number\" value=\"6\" onClick={handleNumClick}>\r\n            6\r\n          </button>\r\n          <button className=\"operators\" value=\"*\" onClick={handleOperatorClick}>\r\n            *\r\n          </button>\r\n          <button className=\"number\" value=\"7\" onClick={handleNumClick}>\r\n            7\r\n          </button>\r\n          <button className=\"number\" value=\"8\" onClick={handleNumClick}>\r\n            8\r\n          </button>\r\n          <button className=\"number\" value=\"9\" onClick={handleNumClick}>\r\n            9\r\n          </button>\r\n          <button className=\"operators\" value=\"/\" onClick={handleOperatorClick}>\r\n            /\r\n          </button>\r\n          <button className=\"number\" value=\".\" onClick={handleDec}>\r\n            .\r\n          </button>\r\n          <button className=\"number\" value=\"0\" onClick={handleNumClick}>\r\n            0\r\n          </button>\r\n          <button onClick={handleEmoji}>😊</button>\r\n          <button className=\"functions\" onClick={handleEquals}>\r\n            =\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Calculator;\r\n","import React from \"react\";\r\nimport Calculator from \"./Calculator\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Calculator />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}